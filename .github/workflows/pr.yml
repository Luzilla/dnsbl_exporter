name: pr

on:
  pull_request:

concurrency:
  group: pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  build_unbound:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v5
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - id: image
      run: |
        IMAGE_NAME=$(uuidgen)
        echo "name=ttl.sh/${IMAGE_NAME}:1h" >> $GITHUB_OUTPUT
    - uses: docker/build-push-action@v6
      with:
        context: .docker/unbound/rootfs
        push: true
        tags: ${{ steps.image.outputs.name }}
    - if: github.event.pull_request.head.repo.full_name == github.repository
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - if: github.event.pull_request.head.repo.full_name == github.repository
      uses: docker/build-push-action@v6
      with:
        context: .docker/unbound/rootfs
        push: true
        tags: ghcr.io/luzilla/unbound:dev

  test:
    strategy:
      matrix:
        go-version: [1.24.x]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}
        cache: false
    - run: go test ./...

  release_test:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-go@v6
      with:
        go-version-file: go.mod
        cache: false
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - run: docker buildx ls
    - uses: goreleaser/goreleaser-action@v6
      with:
        version: '~> v2'
        args: release --snapshot --clean
